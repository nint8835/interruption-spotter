// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: queries.sql

package database

import (
	"context"
)

const getCurrentInterruptionLevel = `-- name: GetCurrentInterruptionLevel :one
SELECT interruption_level
FROM spot_instance_stats
WHERE region = ?
    AND operating_system = ?
    AND instance_type = ?
ORDER BY observed_time DESC
LIMIT 1
`

type GetCurrentInterruptionLevelParams struct {
	Region          string
	OperatingSystem string
	InstanceType    string
}

func (q *Queries) GetCurrentInterruptionLevel(ctx context.Context, arg GetCurrentInterruptionLevelParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, getCurrentInterruptionLevel, arg.Region, arg.OperatingSystem, arg.InstanceType)
	var interruption_level int64
	err := row.Scan(&interruption_level)
	return interruption_level, err
}

const insertStat = `-- name: InsertStat :exec
INSERT INTO spot_instance_stats (
        region,
        operating_system,
        instance_type,
        interruption_level,
        observed_time
    )
VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)
`

type InsertStatParams struct {
	Region            string
	OperatingSystem   string
	InstanceType      string
	InterruptionLevel int64
}

func (q *Queries) InsertStat(ctx context.Context, arg InsertStatParams) error {
	_, err := q.db.ExecContext(ctx, insertStat,
		arg.Region,
		arg.OperatingSystem,
		arg.InstanceType,
		arg.InterruptionLevel,
	)
	return err
}
